<?xml version="1.0" encoding="UTF-16"?>
<Task version="1.2" xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task">
  <RegistrationInfo>
    <Date>2020-03-30T00:00:00</Date>
    <Author>github.com/danielewood</Author>
    <Description>Updates Plex customConnection URLs, if different from Argo Tunnel URL, and restarts Plex Media Server to push new URLs to the Plex API

When you import this XML into Task Scheduler, you will need to change the User under the Triggers Tab to the account which Plex runs under.</Description>
    <URI>\Plex-Argo-DirectoryUpdate</URI>
  </RegistrationInfo>
  <Triggers>
    <LogonTrigger>
      <Repetition>
        <Interval>PT5M</Interval>
        <StopAtDurationEnd>false</StopAtDurationEnd>
      </Repetition>
      <Enabled>true</Enabled>
      <UserId>CHANGE_THIS_TO_YOUR_SAMACCOUNTNAME</UserId>
      <Delay>PT1M</Delay>
    </LogonTrigger>
  </Triggers>
  <Principals>
    <Principal id="Author">
      <LogonType>InteractiveToken</LogonType>
      <RunLevel>LeastPrivilege</RunLevel>
    </Principal>
  </Principals>
  <Settings>
    <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>
    <DisallowStartIfOnBatteries>true</DisallowStartIfOnBatteries>
    <StopIfGoingOnBatteries>true</StopIfGoingOnBatteries>
    <AllowHardTerminate>false</AllowHardTerminate>
    <StartWhenAvailable>false</StartWhenAvailable>
    <RunOnlyIfNetworkAvailable>false</RunOnlyIfNetworkAvailable>
    <IdleSettings>
      <StopOnIdleEnd>true</StopOnIdleEnd>
      <RestartOnIdle>false</RestartOnIdle>
    </IdleSettings>
    <AllowStartOnDemand>true</AllowStartOnDemand>
    <Enabled>true</Enabled>
    <Hidden>false</Hidden>
    <RunOnlyIfIdle>false</RunOnlyIfIdle>
    <WakeToRun>false</WakeToRun>
    <ExecutionTimeLimit>PT0S</ExecutionTimeLimit>
    <Priority>7</Priority>
  </Settings>
  <Actions Context="Author">
    <Exec>
      <Command>Powershell.exe</Command>
      <Arguments>-WindowStyle Hidden Invoke-Command -ScriptBlock {
  Start-Sleep 10
  While ($true) {
    $RegistryPath='Registry::HKEY_CURRENT_USER\SOFTWARE\Plex, Inc.\Plex Media Server'
    $PlexOnlineToken=(Get-ItemProperty -Path $RegistryPath -Name PlexOnlineToken).PlexOnlineToken
    $PlexOnlineToken='https://plex.tv/api/resources?X-Plex-Token=' + $PlexOnlineToken

    $regex = '([\w-]+\.)+trycloudflare\.com'

    $ArgoURL=$null
    $PlexAPIcustomConnections=$null
    $RestError=$null

    Try {
      $ArgoURL=(Invoke-WebRequest -UseBasicParsing -Uri 'http://localhost:33400/metrics').Content | Select-String -Pattern $regex -AllMatches | % { $_.Matches } | % { $_.Value } | Select-Object -First 1
      [xml]$doc = (New-Object System.Net.WebClient).DownloadString("${PlexOnlineToken}")
      $PlexAPIcustomConnections=($doc.MediaContainer.Device | 
      Where-Object { $_.Name -eq (Get-ItemProperty -Path $RegistryPath -Name FriendlyName).FriendlyName -or $_.Name -eq $env:computername }).Connection | 
      where address -Like '*trycloudflare.com' | Select-Object -ExpandProperty address -First 1
    } Catch {
      $RestError = $_
      Start-Sleep 60
    }
    if ((!$ArgoURL) -or (!$PlexAPIcustomConnections)){continue}
    if ($ArgoURL -ne $PlexAPIcustomConnections){
      $RegistryValue='https://' + ${ArgoURL} + ':443,http://' + ${ArgoURL} + ':80'
      Set-ItemProperty -Path ${RegistryPath} -Name customConnections -Value ${RegistryValue}
      $PlexEXE = 'C:\Program Files (x86)\Plex\Plex Media Server\Plex Media Server.exe'
      Get-Process | ? {$_.path -eq $PlexEXE} | Stop-Process
      Start-Process $PlexEXE
    }
    Start-Sleep 300
  }
}</Arguments>
    </Exec>
  </Actions>
</Task>