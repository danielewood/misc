# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {

    worker_connections 1024;
}

http {

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    ## Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    server {

        listen 80 default_server;
        listen [::]:80 default_server;
        return 301 https://$host$request_uri;
    }

    ## Refuse all unknown HTTPS hostnames
    server {

        listen 443 ssl default_server;
        server_name _;
        return 404;
        ssl_certificate /etc/nginx/fakecertificate.crt;
        ssl_certificate_key /etc/nginx/fakecertificate.key;
    }

    ## vouch_proxy docker container
    ## config is in ~/vouch_proxy/config/config.yml
    server {

        server_name vouch.YOUR.DOMAIN;
        include /etc/nginx/snippets/ssl.YOUR_DOMAIN.settings;

        location / {

            proxy_pass http://127.0.0.1:9090;
            # be sure to pass the original host header
            proxy_set_header Host $http_host;
        }
    }

    ## Lookup $host in a redirect map
    map $host $redirect_map {

        include /etc/nginx/snippets/vouch.redirects.map;
    }

    ## Lookup $host in a proxy map
    map $host $proxy_map {

        include /etc/nginx/snippets/vouch.proxy_pass.map;
    }

    server {

        ## Trigger on *.YOUR.DOMAIN or YOUR.DOMAIN
        server_name ~^(?<subdomain>.+)\.YOUR\.DOMAIN$;
        include /etc/nginx/snippets/ssl.YOUR_DOMAIN.settings;

        ## First check if matches redirect map
        if ($redirect_map) {

            return 302 $redirect_map;
        }

        ## If not, apply vouch auth
        include /etc/nginx/snippets/vouch.settings;

        location / {

            ## If we find a match on the proxy_map, go ahead and proxy
            if ($proxy_map) {

                proxy_pass $proxy_map;
                rewrite /(.*) /$1 break;
            }

        }
    }

    server {

        server_name FreeNAS.YOUR_DOMAIN;
        include /etc/nginx/snippets/ssl.YOUR_DOMAIN.settings;
        include /etc/nginx/snippets/vouch.settings;

        location / {

            proxy_pass http://10.50.0.30;
            proxy_cache off;
        }

        ## Special extras for FreeNAS GUI, otherwise it just shows loading forever.
        ## Source: https://www.ixsystems.com/community/threads/11-2-web-gui-doesnt-work-behind-a-reverse-proxy.63781/

        location /websocket {

            # this is required for ui
            proxy_pass http://10.50.0.30/websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            proxy_read_timeout 86400;
            proxy_cache off;
        }
        location /websocket/shell {

            # this is required for VM serial consoles
            proxy_pass http://10.50.0.30/websocket/shell;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            proxy_read_timeout 86400;
            proxy_cache off;
        }
    }

    server {

        server_name FreeIPA.YOUR.DOMAIN;
        include /etc/nginx/snippets/ssl.YOUR_DOMAIN.settings;
        include /etc/nginx/snippets/vouch.settings;

        location ~ ^/?$ {

            return 302 https://$host/ipa/ui/;
        }
        location /ipa/ {

            proxy_pass https://127.0.0.1/ipa/;
            proxy_cookie_domain $proxy_host $host;
            proxy_set_header Referer https://$proxy_host/ipa/ui;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-Server $host;
            proxy_cache off;
        }
    }


}

