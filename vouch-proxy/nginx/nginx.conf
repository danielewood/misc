# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {

  worker_connections 1024;
}

http {

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Load modular configuration files from the /etc/nginx/conf.d directory.
  # See http://nginx.org/en/docs/ngx_core_module.html#include
  # for more information.
  include /etc/nginx/conf.d/*.conf;

  ## Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
  server {

    listen 80 default_server;
    listen [::]:80 default_server;
    return 301 https://$host$request_uri;
  }

  ## Refuse all unknown HTTPS hostnames
  server {

    listen 443 ssl default_server;
    server_name _;
    return 404;
    ssl_certificate /etc/nginx/fakecertificate.crt;
    ssl_certificate_key /etc/nginx/fakecertificate.key;
  }

  ## vouch_proxy docker container
  ## config is in ~/vouch_proxy/config/config.yml
  server {

    server_name vouch.YOUR.DOMAIN;
    include /etc/nginx/snippets/ssl.YOUR_DOMAIN.settings;

    location / {

      proxy_pass http://127.0.0.1:9090;
      # be sure to pass the original host header
      proxy_set_header Host $http_host;
    }
  }

  ## Lookup $host in a redirect map
  map $host $redirect_map {

    include /etc/nginx/snippets/vouch.redirects.map;
  }

  ## Lookup $host in a proxy map
  map $host $proxy_map {

    include /etc/nginx/snippets/vouch.proxy_pass.map;
  }

  server {

    ## Trigger on *.YOUR.DOMAIN or YOUR.DOMAIN
    server_name ~^(?<subdomain>.+)\.YOUR\.DOMAIN$;
    include /etc/nginx/snippets/ssl.YOUR_DOMAIN.settings;

    ## First check if matches redirect map
    if ($redirect_map) {

      return 302 $redirect_map;
    }

    ## If not, apply vouch auth
    include /etc/nginx/snippets/vouch.settings;

    location / {

      ## If we find a match on the proxy_map, go ahead and proxy
      if ($proxy_map) {

        proxy_pass $proxy_map;
        rewrite /(.*) /$1 break;
      }

    }
  }
}